buildscript{
	ext{
		springBootVer = '3.2.3'
		querydslVer = '5.0.0'
		springDependencyMgmtVer = '1.1.4'
		springCloudVersion = '2023.0.0'
//		nettyVer = '4.1.52.Final'
		grpcVer = '1.35.0'
		protocVer = '3.14.8'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVer}"
	id 'io.spring.dependency-management' version "${springDependencyMgmtVer}"
	id 'com.google.protobuf' version '0.8.18'
}

group = 'sobolaw'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// query dsl
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation "com.querydsl:querydsl-jpa:${querydslVer}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVer}:jakarta"

	// clova-grpc
	implementation "io.grpc:grpc-netty:${grpcVer}"
	implementation "io.grpc:grpc-protobuf:${grpcVer}"
	implementation "io.grpc:grpc-stub:${grpcVer}"

	// JUnit 5
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

	// Mockito for mocking gRPC
	testImplementation 'org.mockito:mockito-core:3.6.0'

}

// JUnit 5를 위한 설정
test {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.14.0"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.35.0'
		}
	}
	generateProtoTasks.generatedFilesBaseDir = "$projectDir/src/generated"
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}